name: "Release"

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-binaries:
    name: "Build binaries"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 12
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-musl"
            cross: true
          - os: "macos-latest"
            target: "aarch64-apple-darwin"
          - os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
            ext: .exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 1
      
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build
        uses: ClementTsang/cargo-action@v0.0.6
        with:
          command: build
          args: --release --verbose --locked --target=${{ matrix.target }}
          use-cross: ${{ matrix.cross || 'false' }}
          cross-version: 0.2.5

      - name: Info and make release directory
        id: fm
        run: |
          echo "name=fm-${{ matrix.target }}" >> $GITHUB_OUTPUT
          mkdir release

      - name: Bundle release (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          mv "target/${{ matrix.target }}/release/fm-cli.exe" fm-cli.exe
          7z a fm-${{ matrix.target }}.zip fm-cli.exe
          mv fm-${{ matrix.target }}.zip release/

      - name: Bundle release (Linux and macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          mv "target/${{ matrix.target }}/release/fm-cli" fm-cli
          tar -czf fm-${{ matrix.target }}.tar.gz fm-cli
          mv fm-${{ matrix.target }}.tar.gz release/

      - name: Save release as artifact
        uses: actions/upload-artifact@v4
        with:
          name: "release-${{ matrix.target }}"
          path: release

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
          fail_on_unmatched_files: true
          # body: |
          files: |
            ./release/*
